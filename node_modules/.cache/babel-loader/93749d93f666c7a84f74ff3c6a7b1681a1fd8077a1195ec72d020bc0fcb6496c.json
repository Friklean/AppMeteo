{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ExTre\\\\OneDrive\\\\Documents\\\\AppMeteo\\\\src\\\\components\\\\LocationWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getWeatherByCoordinates } from '../services/weatherService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationWeather = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setLoading(true);\n      const data = await getWeatherByCoordinates(latitude, longitude);\n      setWeather(data);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }, this) : weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"M\\xE9t\\xE9o \\xE0 votre position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temp\\xE9rature: \", weather.main.temp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", weather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`,\n        alt: \"Weather Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationWeather, \"mPjnZTxf7CMvVuJMdU2nu9fqef4=\");\n_c = LocationWeather;\nexport default LocationWeather;\nvar _c;\n$RefreshReg$(_c, \"LocationWeather\");","map":{"version":3,"names":["React","useState","useEffect","getWeatherByCoordinates","jsxDEV","_jsxDEV","LocationWeather","_s","weather","setWeather","loading","setLoading","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","data","children","fileName","_jsxFileName","lineNumber","columnNumber","main","temp","description","src","icon","alt","_c","$RefreshReg$"],"sources":["C:/Users/ExTre/OneDrive/Documents/AppMeteo/src/components/LocationWeather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getWeatherByCoordinates } from '../services/weatherService';\r\n\r\nconst LocationWeather = () => {\r\n  const [weather, setWeather] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(async (position) => {\r\n      const { latitude, longitude } = position.coords;\r\n      setLoading(true);\r\n      const data = await getWeatherByCoordinates(latitude, longitude);\r\n      setWeather(data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? <p>Chargement...</p> : weather && (\r\n        <div>\r\n          <h2>Météo à votre position</h2>\r\n          <p>Température: {weather.main.temp} °C</p>\r\n          <p>Description: {weather.weather[0].description}</p>\r\n          <img \r\n            src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`} \r\n            alt=\"Weather Icon\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationWeather;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,uBAAuB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdU,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,MAAOC,QAAQ,IAAK;MAC3D,MAAM;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;MAC/CP,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMQ,IAAI,GAAG,MAAMhB,uBAAuB,CAACa,QAAQ,EAAEC,SAAS,CAAC;MAC/DR,UAAU,CAACU,IAAI,CAAC;MAChBR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAe,QAAA,EACGV,OAAO,gBAAGL,OAAA;MAAAe,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAGhB,OAAO,iBACvCH,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BnB,OAAA;QAAAe,QAAA,GAAG,kBAAa,EAACZ,OAAO,CAACiB,IAAI,CAACC,IAAI,EAAC,QAAG;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1CnB,OAAA;QAAAe,QAAA,GAAG,eAAa,EAACZ,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACmB,WAAW;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDnB,OAAA;QACEuB,GAAG,EAAE,oCAAoCpB,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACqB,IAAI,MAAO;QACvEC,GAAG,EAAC;MAAc;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7BID,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}