{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = '8e4ba8dc0c5cbf4ac0f8864b2f8e3c0c';\nexport const getWeatherByCity = async city => {\n  try {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la récupération des données météo :', error);\n    return null;\n  }\n};\nexport const getWeatherForecast = async city => {\n  try {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la récupération des prévisions :', error);\n    return null;\n  }\n};\nexport const getWeatherByCoordinates = async (lat, lon) => {\n  try {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la récupération des données météo par coordonnées :', error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","API_KEY","getWeatherByCity","city","response","get","data","error","console","getWeatherForecast","getWeatherByCoordinates","lat","lon"],"sources":["C:/Users/ExTre/OneDrive/Documents/AppMeteo/src/services/weatherService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '8e4ba8dc0c5cbf4ac0f8864b2f8e3c0c';\r\n\r\nexport const getWeatherByCity = async (city) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération des données météo :', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getWeatherForecast = async (city) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération des prévisions :', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getWeatherByCoordinates = async (lat, lon) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération des données météo par coordonnées :', error);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,IAAI,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC9B,qDAAqDF,IAAI,UAAUF,OAAO,eAC5E,CAAC;IACD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC;IAC1E,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAG,MAAON,IAAI,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC9B,sDAAsDF,IAAI,UAAUF,OAAO,eAC7E,CAAC;IACD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACvE,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMG,uBAAuB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EACzD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC9B,uDAAuDM,GAAG,QAAQC,GAAG,UAAUX,OAAO,eACxF,CAAC;IACD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oEAAoE,EAAEA,KAAK,CAAC;IAC1F,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}